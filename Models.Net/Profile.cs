// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using NBA.Models;
//
//    var profile = Profile.FromJson(jsonString);

namespace NBA.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Profile
    {
        [JsonProperty("_internal")]
        public Internal Internal { get; set; }

        [JsonProperty("league")]
        public League League { get; set; }
    }

    public partial class Standard
    {
        [JsonProperty("teamId")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long TeamId { get; set; }

        [JsonProperty("stats")]
        public Stats Stats { get; set; }
    }

    public partial class Stats
    {
        [JsonProperty("latest")]
        public CareerSummary Latest { get; set; }

        [JsonProperty("careerSummary")]
        public CareerSummary CareerSummary { get; set; }

        [JsonProperty("regularSeason")]
        public RegularSeason RegularSeason { get; set; }
    }

    public partial class CareerSummary
    {
        [JsonProperty("tpp")]
        public string Tpp { get; set; }

        [JsonProperty("ftp")]
        public string Ftp { get; set; }

        [JsonProperty("fgp")]
        public string Fgp { get; set; }

        [JsonProperty("ppg")]
        public string Ppg { get; set; }

        [JsonProperty("rpg")]
        public string Rpg { get; set; }

        [JsonProperty("apg")]
        public string Apg { get; set; }

        [JsonProperty("bpg")]
        public string Bpg { get; set; }

        [JsonProperty("mpg")]
        public string Mpg { get; set; }

        [JsonProperty("spg")]
        public string Spg { get; set; }

        [JsonProperty("assists")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long Assists { get; set; }

        [JsonProperty("blocks")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long Blocks { get; set; }

        [JsonProperty("steals")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long Steals { get; set; }

        [JsonProperty("turnovers")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long Turnovers { get; set; }

        [JsonProperty("offReb")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long OffReb { get; set; }

        [JsonProperty("defReb")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long DefReb { get; set; }

        [JsonProperty("totReb")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long TotReb { get; set; }

        [JsonProperty("fgm")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long Fgm { get; set; }

        [JsonProperty("fga")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long Fga { get; set; }

        [JsonProperty("tpm")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long Tpm { get; set; }

        [JsonProperty("tpa")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long Tpa { get; set; }

        [JsonProperty("ftm")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long Ftm { get; set; }

        [JsonProperty("fta")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long Fta { get; set; }

        [JsonProperty("pFouls")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long PFouls { get; set; }

        [JsonProperty("points")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long Points { get; set; }

        [JsonProperty("gamesPlayed")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long GamesPlayed { get; set; }

        [JsonProperty("gamesStarted")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long GamesStarted { get; set; }

        [JsonProperty("plusMinus")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long PlusMinus { get; set; }

        [JsonProperty("min")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long Min { get; set; }

        [JsonProperty("dd2")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long Dd2 { get; set; }

        [JsonProperty("td3")]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long Td3 { get; set; }

        [JsonProperty("seasonYear", NullValueHandling = NullValueHandling.Ignore)]
        public long? SeasonYear { get; set; }

        [JsonProperty("seasonStageId", NullValueHandling = NullValueHandling.Ignore)]
        public long? SeasonStageId { get; set; }

        [JsonProperty("topg", NullValueHandling = NullValueHandling.Ignore)]
        public string Topg { get; set; }

        [JsonProperty("teamId", NullValueHandling = NullValueHandling.Ignore)]
        [JsonConverter(typeof(PurpleParseStringConverter))]
        public long? TeamId { get; set; }
    }

    public partial class RegularSeason
    {
        [JsonProperty("season")]
        public List<Season> Season { get; set; }
    }

    public partial class Season
    {
        [JsonProperty("seasonYear")]
        public long SeasonYear { get; set; }

        [JsonProperty("teams")]
        public List<CareerSummary> Teams { get; set; }

        [JsonProperty("total")]
        public CareerSummary Total { get; set; }
    }

    public partial class Profile
    {
        public static Profile FromJson(string json) => JsonConvert.DeserializeObject<Profile>(json, NBA.Models.Converter.Settings);
    }

}
